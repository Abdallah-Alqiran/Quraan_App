<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/alqiran/quraanapp/ui/screens/suwar_package/components/BottomBarPlayer.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/alqiran/quraanapp/ui/screens/suwar_package/components/BottomBarPlayer.kt" />
              <option name="originalContent" value="package com.alqiran.quraanapp.ui.screens.suwar_package.components&#10;&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.Row&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.BottomAppBar&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Slider&#10;import androidx.compose.material3.SliderDefaults&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.unit.dp&#10;import com.alqiran.quraanapp.data.datasources.remote.model.Audio&#10;import com.alqiran.quraanapp.ui.screens.suwar_package.ArtistInfo&#10;import com.alqiran.quraanapp.ui.screens.suwar_package.utils.timeStampToDuration&#10;&#10;@Composable&#10;fun BottomBarPlayer(&#10;    progress: Float,&#10;    onProgress: (Float) -&gt; Unit,&#10;    audio: Audio,&#10;    isAudioPlaying: Boolean,&#10;    onStart: () -&gt; Unit,&#10;    onNext: () -&gt; Unit,&#10;    onPrevious: () -&gt; Unit&#10;) {&#10;    BottomAppBar(&#10;        modifier = Modifier&#10;            .fillMaxWidth()&#10;            .height(120.dp) // Increased height for more visibility&#10;    ){&#10;        Column(&#10;            modifier = Modifier&#10;                .fillMaxWidth()&#10;                .padding(8.dp)&#10;        ) {&#10;//            ArtistInfo(audio = audio, modifier = Modifier.fillMaxWidth())&#10;&#10;            Row(&#10;                modifier = Modifier&#10;                    .fillMaxWidth(),&#10;                horizontalArrangement = Arrangement.SpaceBetween,&#10;                verticalAlignment = Alignment.CenterVertically&#10;            ) {&#10;                MediaPlayerController(isAudioPlaying, onStart, onNext, onPrevious)&#10;&#10;                Text(&#10;                    text = timeStampToDuration(progress.toLong()),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface,&#10;                    modifier = Modifier.padding(end = 8.dp)&#10;                )&#10;&#10;                Slider(&#10;                    value = progress,&#10;                    onValueChange = {&#10;                        onProgress(it)&#10;                    },&#10;                    valueRange = 0f..100f,&#10;                    modifier = Modifier.weight(2f),&#10;                    colors = SliderDefaults.colors(&#10;                        thumbColor = MaterialTheme.colorScheme.primary,&#10;                        activeTrackColor = MaterialTheme.colorScheme.primary,&#10;                        inactiveTrackColor = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.24f)&#10;                    ),&#10;                    steps = 0&#10;                )&#10;                Text(&#10;                    text = timeStampToDuration(100L),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface,&#10;                    modifier = Modifier.padding(start = 8.dp)&#10;                )&#10;            }&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.alqiran.quraanapp.ui.screens.suwar_package.components&#10;&#10;import androidx.compose.foundation.layout.Arrangement&#10;import androidx.compose.foundation.layout.Column&#10;import androidx.compose.foundation.layout.Row&#10;import androidx.compose.foundation.layout.fillMaxWidth&#10;import androidx.compose.foundation.layout.height&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.BottomAppBar&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.Slider&#10;import androidx.compose.material3.SliderDefaults&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.unit.dp&#10;import com.alqiran.quraanapp.data.datasources.remote.model.Audio&#10;import com.alqiran.quraanapp.ui.screens.suwar_package.ArtistInfo&#10;import com.alqiran.quraanapp.ui.screens.suwar_package.utils.timeStampToDuration&#10;&#10;@Composable&#10;fun BottomBarPlayer(&#10;    progress: Float,&#10;    onProgress: (Float) -&gt; Unit,&#10;    audio: Audio,&#10;    isAudioPlaying: Boolean,&#10;    onStart: () -&gt; Unit,&#10;    onNext: () -&gt; Unit,&#10;    onPrevious: () -&gt; Unit&#10;) {&#10;    BottomAppBar(&#10;        modifier = Modifier&#10;            .fillMaxWidth()&#10;            .height(120.dp) // Increased height for more visibility&#10;    ){&#10;        Column(&#10;            modifier = Modifier&#10;                .fillMaxWidth()&#10;                .padding(8.dp)&#10;        ) {&#10;//            ArtistInfo(audio = audio, modifier = Modifier.fillMaxWidth())&#10;&#10;            Row(&#10;                modifier = Modifier&#10;                    .fillMaxWidth(),&#10;                horizontalArrangement = Arrangement.SpaceBetween,&#10;                verticalAlignment = Alignment.CenterVertically&#10;            ) {&#10;                MediaPlayerController(isAudioPlaying, onStart, onNext, onPrevious)&#10;&#10;                Text(&#10;                    text = timeStampToDuration(progress.toLong()),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface,&#10;                    modifier = Modifier.padding(end = 8.dp)&#10;                )&#10;&#10;                Slider(&#10;                    value = progress,&#10;                    onValueChange = {&#10;                        onProgress(it)&#10;                    },&#10;                    valueRange = 0f..100f,&#10;                    modifier = Modifier.weight(2f),&#10;                    colors = SliderDefaults.colors(&#10;                        thumbColor = MaterialTheme.colorScheme.primary,&#10;                        activeTrackColor = MaterialTheme.colorScheme.primary,&#10;                        inactiveTrackColor = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.24f)&#10;                    ),&#10;                    steps = 0&#10;                )&#10;                Text(&#10;                    text = timeStampToDuration(100L),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface,&#10;                    modifier = Modifier.padding(start = 8.dp)&#10;                )&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>